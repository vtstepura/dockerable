name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change to your main branch name if different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${ { secrets.EC2_SSH_KEY } } > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host ec2-instance" >> ~/.ssh/config
          echo "  HostName ${ { secrets.EC2_HOST } }" >> ~/.ssh/config
          echo "  User ${ { secrets.EC2_USER } }" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Archive the repository contents
        run: |
          mkdir -p /tmp/repo
          cp -r . /tmp/repo
          tar -czf /tmp/repo.tar.gz -C /tmp repo

      - name: Copy archive to EC2
        run: scp -o StrictHostKeyChecking=no /tmp/repo.tar.gz ec2-instance:/home/ubuntu/dockerable.tar.gz

      - name: Deploy on EC2
        run: |
          ssh ec2-instance << 'EOF'
            cd /home/ubuntu
            mkdir -p dockerable
            tar -xzf dockerable.tar.gz -C dockerable --strip-components=1
            cd dockerable
            docker-compose down
            docker-compose build
            docker-compose up -d
            sudo systemctl restart nginx
          EOF